"""
–ü—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ –¥–≤–∞ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –æ—Ç—Ä–µ–∑–∫–∞, –∑–∞–¥–∞–Ω–Ω—ã—Ö –º–∞—Ç—Ä–∏—Ü–µ–π
ùêø = [[50, 100],
     [250, 200],
     [50, 200],
     [250, 300]]
—Å –ø–æ–º–æ—â—å—é —Ç–æ–π –∂–µ –º–∞—Ç—Ä–∏—Ü—ã ùëá, —á—Ç–æ –∏ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –∑–∞–¥–∞—á–µ. –†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ –∏ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç–µ
–∏—Ö –Ω–∞—á–∞–ª—å–Ω—ã–π –∏ –∫–æ–Ω–µ—á–Ω—ã–π –Ω–∞–∫–ª–æ–Ω—ã.
"""

import numpy as np
import pygame
import sys


def transform_segment(segment, transformation_matrix):
    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∞—Ç—Ä–∏—á–Ω–æ–≥–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∫ –∫–æ–Ω—Ü–∞–º –æ—Ç—Ä–µ–∑–∫–∞
    new_start = transformation_matrix @ segment[0]
    new_end = transformation_matrix @ segment[1]
    return new_start, new_end


def calculate_slope(p1, p2):
    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–∞–∫–ª–æ–Ω –æ—Ç—Ä–µ–∑–∫–∞
    if p2[0] - p1[0] == 0:  # –ó–∞—â–∏—Ç–∞ –æ—Ç –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å
        return float('inf')  # –í–µ—Ä–Ω—É—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç—å, –µ—Å–ª–∏ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π –æ—Ç—Ä–µ–∑–æ–∫
    return (p2[1] - p1[1]) / (p2[0] - p1[0])


def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Pygame
    pygame.init()

    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤ –æ–∫–Ω–∞
    width, height = 800, 800
    screen = pygame.display.set_mode((width, height))
    pygame.display.set_caption("–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –æ—Ç—Ä–µ–∑–∫–æ–≤")

    # –ò—Å—Ö–æ–¥–Ω—ã–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–µ –æ—Ç—Ä–µ–∑–∫–∏
    L = np.array([[50, 100], [250, 200],
                  [50, 200], [250, 300]])

    # –ú–∞—Ç—Ä–∏—Ü–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è T
    T = np.array([[1, 2],
                  [3, 1]])

    # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –æ—Ç—Ä–µ–∑–∫–æ–≤
    new_L_start1, new_L_end1 = transform_segment(L[0:2], T)
    new_L_start2, new_L_end2 = transform_segment(L[2:4], T)

    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–∞–∫–ª–æ–Ω—ã
    slope_original1 = calculate_slope(L[0], L[1])
    slope_original2 = calculate_slope(L[2], L[3])
    slope_transformed1 = calculate_slope(new_L_start1, new_L_end1)
    slope_transformed2 = calculate_slope(new_L_start2, new_L_end2)

    print(f"–ò—Å—Ö–æ–¥–Ω—ã–µ –Ω–∞–∫–ª–æ–Ω—ã: –æ—Ç—Ä–µ–∑–æ–∫ 1: {slope_original1:.2f}, –æ—Ç—Ä–µ–∑–æ–∫ 2: {slope_original2:.2f}")
    print(f"–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞–∫–ª–æ–Ω—ã: –æ—Ç—Ä–µ–∑–æ–∫ 1: {slope_transformed1:.2f}, –æ—Ç—Ä–µ–∑–æ–∫ 2: {slope_transformed2:.2f}")

    # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª Pygame
    running = True
    while running:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False

        # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ–Ω–∞
        screen.fill((255, 255, 255))

        # –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∏—Å—Ö–æ–¥–Ω—ã—Ö –æ—Ç—Ä–µ–∑–∫–æ–≤ (–∫—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç)
        pygame.draw.line(screen, (255, 0, 0), (L[0][0], height - L[0][1]),
                         (L[1][0], height - L[1][1]), 5)
        pygame.draw.line(screen, (255, 0, 0), (L[2][0], height - L[2][1]),
                         (L[3][0], height - L[3][1]), 5)

        # –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã—Ö –æ—Ç—Ä–µ–∑–∫–æ–≤ (—Å–∏–Ω–∏–π —Ü–≤–µ—Ç)
        pygame.draw.line(screen, (0, 0, 255), (new_L_start1[0], height - new_L_start1[1]),
                         (new_L_end1[0], height - new_L_end1[1]), 5)
        pygame.draw.line(screen, (0, 0, 255), (new_L_start2[0], height - new_L_start2[1]),
                         (new_L_end2[0], height - new_L_end2[1]), 5)

        # –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –æ—Å–µ–π
        pygame.draw.line(screen, (0, 0, 0), (0, height // 2), (width, height // 2), 2)  # –û—Å—å X
        pygame.draw.line(screen, (0, 0, 0), (width // 2, 0), (width // 2, height), 2)  # –û—Å—å Y

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞
        pygame.display.flip()

    # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ Pygame
    pygame.quit()
    sys.exit()


if __name__ == "__main__":
    main()