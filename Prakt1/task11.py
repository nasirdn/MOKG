"""
–ü–æ—Å—Ç—Ä–æ–π—Ç–µ –∫–≤–∞–¥—Ä–∞—Ç, –º–∞—Å—à—Ç–∞–±–∏—Ä—É–π—Ç–µ –µ–≥–æ —Å –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–º ùëö = 0.9 –∏ –ø–æ–≤–æ—Ä–∞—á–∏–≤–∞–π—Ç–µ –Ω–∞ —É–≥–æ–ª ùõº = ùúã/32. –ù–∞—á–∞–ª—å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–≤–∞–¥—Ä–∞—Ç–∞:
ùëã = [[2, ‚àí2],
     [‚àí2, ‚àí2],
     [‚àí2, 2],
     [2, 2]] √ó 100
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ 20 —Ç–∞–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Å
–æ—Ç—Ä–∏—Å–æ–≤–∫–æ–π –≤ pygame.
"""

import numpy as np
import pygame
import sys


def rotate_matrix(angle):
    """–°–æ–∑–¥–∞–µ—Ç –º–∞—Ç—Ä–∏—Ü—É –ø–æ–≤–æ—Ä–æ—Ç–∞ –Ω–∞ –∑–∞–¥–∞–Ω–Ω—ã–π —É–≥–æ–ª."""
    return np.array([[np.cos(angle), -np.sin(angle)],
                     [np.sin(angle), np.cos(angle)]])


def scale_matrix(scale_factor):
    """–°–æ–∑–¥–∞–µ—Ç –º–∞—Ç—Ä–∏—Ü—É –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è —Å –∑–∞–¥–∞–Ω–Ω—ã–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–º."""
    return np.array([[scale_factor, 0],
                     [0, scale_factor]])


def transform_square(square, scale_factor, angle):
    """–ü—Ä–∏–º–µ–Ω—è–µ—Ç –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ (–º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø–æ–≤–æ—Ä–æ—Ç) –∫ –∫–≤–∞–¥—Ä–∞—Ç—É."""
    # –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
    scale = scale_matrix(scale_factor)
    scaled_square = square @ scale

    # –ü–æ–≤–æ—Ä–æ—Ç
    rotation = rotate_matrix(angle)
    transformed_square = scaled_square @ rotation

    return transformed_square


def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Pygame
    pygame.init()

    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤ –æ–∫–Ω–∞
    width, height = 800, 600
    screen = pygame.display.set_mode((width, height))
    pygame.display.set_caption("–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∫–≤–∞–¥—Ä–∞—Ç–∞")

    # –ù–∞—á–∞–ª—å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–≤–∞–¥—Ä–∞—Ç–∞ (—É–º–Ω–æ–∂–µ–Ω–Ω—ã–µ –Ω–∞ 100 –¥–ª—è –≤–∏–¥–∏–º–æ—Å—Ç–∏)
    square = np.array([[2, -2],
                       [-2, -2],
                       [-2, 2],
                       [2, 2]]) * 100

    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏
    scale_factor = 0.9
    angle = np.pi / 32

    # –°–º–µ—â–µ–Ω–∏–µ –¥–ª—è –≤–∏–¥–∏–º–æ—Å—Ç–∏
    offset_x, offset_y = width // 2, height // 2

    # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª Pygame
    running = True
    iterations = 20
    for i in range(iterations):
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False

        # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ–Ω–∞
        screen.fill((255, 255, 255))

        # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
        square = transform_square(square, scale_factor, angle)

        # –°–º–µ—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏
        square_transformed = square + np.array([offset_x, offset_y])

        # –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫–≤–∞–¥—Ä–∞—Ç–∞
        pygame.draw.polygon(screen, (0, 0, 255), square_transformed)

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞
        pygame.display.flip()
        pygame.time.delay(500)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏

    # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ Pygame
    pygame.quit()
    sys.exit()


if __name__ == "__main__":
    main()